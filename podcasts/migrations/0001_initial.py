# Generated by Django 2.0 on 2018-05-06 14:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import podcasts.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('guid', models.CharField(editable=False, max_length=255, unique=True, verbose_name='Episode GUID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Episode Title')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Episode Subtitle')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Episode Summary')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Episode Link')),
                ('media_url', models.URLField(blank=True, editable=False, null=True, verbose_name='Media URL')),
                ('published', models.DateTimeField(blank=True, null=True, verbose_name='Published')),
                ('downloaded', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Downloaded')),
                ('itunes_duration', models.CharField(blank=True, max_length=32, null=True, verbose_name='Duration')),
                ('itunes_season', models.CharField(blank=True, max_length=32, null=True, verbose_name='Season')),
                ('itunes_episode', models.CharField(blank=True, max_length=32, null=True, verbose_name='Episode Number')),
                ('itunes_episodetype', models.CharField(blank=True, max_length=16, null=True, verbose_name='Episode Type')),
                ('file_originalname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Original Filename')),
                ('file_path', models.FilePathField(blank=True, null=True, path='/Volumes/Storage', recursive=True, verbose_name='File Location')),
                ('file_size', podcasts.models.BigPositiveIntegerField(blank=True, null=True, verbose_name='File Size')),
                ('file_sha256', models.CharField(blank=True, max_length=64, null=True, verbose_name='File Hash (SHA256)')),
            ],
            options={
                'verbose_name': 'Episode',
                'verbose_name_plural': 'Episodes',
            },
        ),
        migrations.CreateModel(
            name='EpisodePlaybackState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Playback Position')),
                ('completed', models.BooleanField(default=False, verbose_name='Playback Completed')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playbackstates', to='podcasts.Episode')),
            ],
        ),
        migrations.CreateModel(
            name='Listener',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playback_seek_forward_by', podcasts.models.IntegerRangeField(blank=True, default=45, null=True, verbose_name='Seek Duration Forward')),
                ('playback_seek_backward_by', podcasts.models.IntegerRangeField(blank=True, default=30, null=True, verbose_name='Seek Duration Backward')),
            ],
        ),
        migrations.CreateModel(
            name='Podcast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Podcast Title')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Podcast Subtitle')),
                ('slug', models.SlugField(blank=True, editable=False, unique=True)),
                ('feed_url', models.URLField(unique=True, verbose_name='Feed URL')),
                ('updated', models.DateTimeField(blank=True, null=True, verbose_name='Last Feed Update')),
                ('author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Podcast Author')),
                ('language', models.CharField(blank=True, max_length=64, null=True, verbose_name='Main Language')),
                ('link', models.URLField(blank=True, max_length=64, null=True, verbose_name='Podcast Link')),
                ('image', models.ImageField(blank=True, null=True, upload_to=podcasts.models.cover_image_filename, verbose_name='Cover Image')),
                ('itunes_explicit', models.NullBooleanField(verbose_name='Explicit Tag')),
                ('itunes_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='iTunes Type')),
                ('generator', models.CharField(blank=True, max_length=64, null=True, verbose_name='Feed Generator')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='Podcast Summary')),
            ],
            options={
                'verbose_name': 'Podcast',
                'verbose_name_plural': 'Podcasts',
            },
        ),
        migrations.AddField(
            model_name='listener',
            name='subscribed_podcasts',
            field=models.ManyToManyField(to='podcasts.Podcast', verbose_name="User's Podcasts"),
        ),
        migrations.AddField(
            model_name='listener',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='episodeplaybackstate',
            name='listener',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playbackstates', to='podcasts.Listener'),
        ),
        migrations.AddField(
            model_name='episode',
            name='listeners',
            field=models.ManyToManyField(through='podcasts.EpisodePlaybackState', to='podcasts.Listener', verbose_name="Episodes' Listeners"),
        ),
        migrations.AddField(
            model_name='episode',
            name='podcast',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='podcasts.Podcast', verbose_name='Podcast'),
        ),
    ]
