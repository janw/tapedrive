stages:
  - test
  - build
  - tag

.python:
  image: python:3.7
  stage: test
  before_script:
    - pip install poetry
    - poetry config settings.virtualenvs.create false
    - poetry --no-interaction install

pytest:
  extends: .python
  script:
    - pytest --junitxml=pytest.xml
  after_script:
    - coveralls --data_file=.coverage

  artifacts:
    reports:
      junit: pytest.xml

black:
  extends: .python
  script:
    - black --check --verbose .

flake8:
  extends: .python
  script:
    - flake8 --format=junit-xml --output-file flake8.xml
  artifacts:
    reports:
      junit: flake8.xml


.docker:
  image: docker:stable
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  extends: .docker
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build
      --cache-from $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

tag latest:
  extends: .docker
  stage: tag
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
		- master
